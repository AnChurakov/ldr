--   -------------------------------------------------- 
--   Generated by Enterprise Architect Version 8.0.864
--   Created On : Wednesday, 16 May, 2012 
--   DBMS       : MySql 
--   -------------------------------------------------- 



--  Drop Tables, Stored Procedures and Views 

DROP TABLE Class1
;
DROP TABLE IF EXISTS access_right
;
DROP TABLE IF EXISTS age_limit
;
DROP TABLE IF EXISTS ban_reason
;
DROP TABLE IF EXISTS comment
;
DROP TABLE IF EXISTS download_intensity
;
DROP TABLE IF EXISTS download_link
;
DROP TABLE IF EXISTS file
;
DROP TABLE IF EXISTS file_category
;
DROP TABLE IF EXISTS file_m2m_user
;
DROP TABLE IF EXISTS file_m2m_user_group
;
DROP TABLE IF EXISTS ip_blacklist
;
DROP TABLE IF EXISTS log
;
DROP TABLE IF EXISTS log_archive
;
DROP TABLE IF EXISTS page
;
DROP TABLE IF EXISTS resource_info
;
DROP TABLE IF EXISTS user
;
DROP TABLE IF EXISTS user_group
;
DROP TABLE IF EXISTS user_group_m2m_user
;
DROP TABLE IF EXISTS user_role
;
DROP TABLE IF EXISTS user_role_m2m_user
;
DROP TABLE IF EXISTS user_role_m2m_user_role_right
;
DROP TABLE IF EXISTS user_role_right
;

--  Create Tables 

;

CREATE TABLE access_right
(
	ar_uid BIGINT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Идентификатор параметра.',
	ar_name VARCHAR(255) NULL COMMENT 'Намиенование параметра (в т.ч. может задаваться пользователем самостоятельно, тогда выставляется флаг ar_user_created).',
	ar_description TEXT NULL COMMENT 'Описание параметра.',
	ar_u_uid BIGINT UNSIGNED NULL COMMENT 'Кто из пользователей создал право. NULL == предустановленное право.',
	PRIMARY KEY (ar_uid),
	UNIQUE UQ_access_right_ar_uid(ar_uid),
	KEY (ar_u_uid)
) DEFAULT CHARACTER SET utf8 DEFAULT CHARSET utf8 COLLATE utf8_general_ci ENGINE=InnoDB COMMENT='Параметры доступа к файлу. Например, "публичный", "личный", "для друзей", "для указанного круга пользователей". Пользователи могут создавать свои наборы прав доступа.'
;


CREATE TABLE age_limit
(
	al_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Идентификатор ограничения.',
	al_min_age SMALLINT UNSIGNED NOT NULL COMMENT 'Минимальный возраст (X+), на который уже НЕ распространяется ограничение (например: 18 -- значит, что ограничение распространяется на тех, кому от 0 до 17 включительно лет.',
	al_name VARCHAR(255) NOT NULL COMMENT 'Наименование ограничения -- TBD, см. международную практику по маркировке фильмов, игр и т.п. Не может быть 2+ одноимённых ограничений!',
	al_description TEXT NULL COMMENT 'Описание ограничения (например: "Содержит элементы высшей математики, не для детей до 3-х лет!")',
	PRIMARY KEY (al_id),
	UNIQUE UQ_age_limit_al_id(al_id),
	UNIQUE UQ_age_limit_al_name(al_name)
) DEFAULT CHARACTER SET utf8 DEFAULT CHARSET utf8 COLLATE utf8_general_ci ENGINE=InnoDB COMMENT='Возрастные ограничения. Наименование ограничения -- TBD, см. международную практику по маркировке фильмов, игр и т.п.'
;


CREATE TABLE ban_reason
(
	br_uid BIGINT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Идентификатор причины бана.',
	br_name VARCHAR(180) NULL COMMENT 'Название причины бана (уникально, потому 180 символов;  MySQL не пропускает более больше в UTF8 в уникальных индексах).',
	br_description TEXT NULL COMMENT 'Описание причины бана.',
	PRIMARY KEY (br_uid),
	UNIQUE UQ_ban_reason_br_name(br_name)
) DEFAULT CHARACTER SET utf8 DEFAULT CHARSET utf8 COLLATE utf8_general_ci ENGINE=InnoDB COMMENT='Причины бана.'
;


CREATE TABLE comment
(
	c_uid BIGINT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Идентификатор комментария.',
	c_f_uid BIGINT UNSIGNED NOT NULL COMMENT 'К какому файлу относится комментарий (ссылка на таблицу файлов).',
	c_text TEXT NOT NULL COMMENT 'Текст комментария.',
	c_u_uid BIGINT UNSIGNED NOT NULL COMMENT 'Кто оставил комментарий (ссылка на таблицу пользователей).',
	c_dt INTEGER NOT NULL COMMENT 'Дата-время добавления комментария.',
	c_mark SMALLINT NULL COMMENT 'Оценка файла. Может быть не указана (NULL).',
	PRIMARY KEY (c_uid),
	KEY (c_f_uid),
	KEY (c_u_uid)
) DEFAULT CHARACTER SET utf8 DEFAULT CHARSET utf8 COLLATE utf8_general_ci ENGINE=InnoDB COMMENT='Комментарии к файлам (плоская структура, т.е. нельзя комментировать комментарии).'
;


CREATE TABLE download_intensity
(
	di_uid BIGINT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Идентификатор скачивания.',
	di_dl_uid BIGINT UNSIGNED NOT NULL COMMENT 'Идентификатор ссылки на скачивание.',
	di_dt INTEGER NULL COMMENT 'Дата и время выполнения скачивания (unixtime).',
	PRIMARY KEY (di_uid),
	KEY (di_dl_uid)
) DEFAULT CHARACTER SET utf8 DEFAULT CHARSET utf8 COLLATE utf8_general_ci ENGINE=InnoDB COMMENT='Итенсивность скачиваний (дополнение основного лога: сколько раз за некоторое время использовали конкретную ссылку для скачивания).'
;


CREATE TABLE download_link
(
	dl_uid BIGINT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Идентификатор ссылки.',
	dl_f_uid BIGINT UNSIGNED NOT NULL COMMENT 'Идентификатор файла.',
	dl_hash CHAR(240) NOT NULL COMMENT 'Шэш для формирования ссылки (6 sha1 хэшей, склеенных в одну строку). Не должно совпадать с dl_cookie_hash!!!',
	dl_dt INTEGER NOT NULL COMMENT 'Ссылка действительна до ... (unixtime)',
	dl_ipv4 CHAR(15) NULL COMMENT 'IPv4, для которого действительна ссылка. IPv4 и IPv6 не могут одновременно быть NULL.',
	dl_ipv6 CHAR(39) NULL COMMENT 'IPv6, для которого действительна ссылка. IPv4 и IPv6 не могут одновременно быть NULL.',
	dl_cookie_hash CHAR(240) NOT NULL COMMENT 'Cookie-hash для дополнительной защиты. 6 sha1. НЕ ДОЛЖЕН СОВПАДАТЬ с dl_hash!!!',
	dl_password CHAR(40) NULL COMMENT 'sha1-хэш пароля на скачивание; NULL -- если пароля нет.',
	PRIMARY KEY (dl_uid),
	KEY (dl_f_uid)
) DEFAULT CHARACTER SET utf8 DEFAULT CHARSET utf8 COLLATE utf8_general_ci ENGINE=InnoDB COMMENT='Ссылки на скачивание файлов.'
;


CREATE TABLE file
(
	f_uid BIGINT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Идентификатор файла.',
	f_fc_uid BIGINT UNSIGNED NULL COMMENT 'Идентификатор категории файлов (ссылка на таблицу категорий).',
	f_size BIGINT UNSIGNED NOT NULL COMMENT 'Размер файла (в байтах).',
	f_upload_datetime INTEGER NOT NULL COMMENT 'Дата-время загрузки файла на сервер.',
	f_save_datetime INTEGER NOT NULL COMMENT 'Дата-время, до котороы файл хранится на сервере.',
	f_src_name VARCHAR(255) NOT NULL COMMENT 'Исходное имя файла (как он назывался у пользователя на компьютере). БЕЗ РАСШИРЕНИЯ! Оно хранится отдельно в f_src_ext!',
	f_src_ext VARCHAR(255) NULL COMMENT 'Исходное расширение файла (каким оно было у пользователя на компьютере).',
	f_name CHAR(200) NOT NULL COMMENT 'Имя файла на сервере. Пять sha1-хешей.',
	f_sha1_checksum CHAR(40) NOT NULL COMMENT 'Контрольная сумма файла, sha1-хеш.',
	f_ar_uid BIGINT UNSIGNED NOT NULL COMMENT 'Права доступа к файлу (ссылка на таблицу прав доступа).',
	f_downloaded BIGINT UNSIGNED NULL DEFAULT 0 COMMENT 'Счётчик скачиваний файла.',
	f_al_uid BIGINT UNSIGNED NULL COMMENT 'Возрастные ограничения на доступ к файлу. Ссылка на таблицу возрастных ограничений. Если возрастные ограничения заданы И для файла, И для категории, к которой принадлежит файл, применяются более строгие ограничения (т.е. берётся максимальный возраст, например: "с 16 лет" и "с 18 лет" -- берётся "с 18 лет").',
	f_del_link_hash CHAR(200) NOT NULL COMMENT 'Пять sha1-хешей. Ссылка на удаление файла, если его размещал незарегистрированный пользователь. Зарегистрированные могут удалить файл в своём "личном кабинете".',
	PRIMARY KEY (f_uid),
	UNIQUE UQ_file_f_uid(f_uid),
	KEY (f_ar_uid),
	KEY (f_fc_uid),
	KEY (f_al_uid)
) DEFAULT CHARACTER SET utf8 DEFAULT CHARSET utf8 COLLATE utf8_general_ci ENGINE=InnoDB COMMENT='Файлы на сервере. Одна из основных, наиболее часто используемых таблиц. Максимально продумать оптимизацию производительности!'
;


CREATE TABLE file_category
(
	fc_uid BIGINT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Идентификатор категории.',
	fc_name VARCHAR(255) NOT NULL COMMENT 'Название категории.',
	fc_age_limit BIGINT UNSIGNED NULL COMMENT 'Возрастные ограничения на просмотр файлов данной категории.',
	PRIMARY KEY (fc_uid),
	UNIQUE UQ_file_category_fc_name(fc_name),
	KEY (fc_age_limit),
	INDEX IDX_fc_age_limit_and_name (fc_age_limit ASC, fc_name ASC)
) DEFAULT CHARACTER SET utf8 DEFAULT CHARSET utf8 COLLATE utf8_general_ci ENGINE=InnoDB COMMENT='Категории файлов. Например, "Музыка", "Видео", "Программы" и т.п.'
;


CREATE TABLE file_m2m_user
(
	fmu_f_uid BIGINT UNSIGNED NOT NULL COMMENT 'Идентификатор файла.',
	fmu_u_uid BIGINT UNSIGNED NOT NULL COMMENT 'Идентификатор пользователя.',
	fmu_direction ENUM('upload','download') NOT NULL COMMENT 'Пользователь закачал или скачал файл.',
	fmu_count BIGINT UNSIGNED NULL COMMENT 'Сколько раз данный пользователь выполнил данную операцию с данным файлом.',
	PRIMARY KEY (fmu_f_uid, fmu_u_uid, fmu_direction),
	KEY (fmu_f_uid),
	KEY (fmu_u_uid)
) DEFAULT CHARACTER SET utf8 DEFAULT CHARSET utf8 COLLATE utf8_general_ci ENGINE=InnoDB COMMENT='Связь между пользователем и файлами. Здесь учитывается, закачал и/или скачал пользователь тот или иной файл (и сколько раз). В т.ч. учитывается, сколько раз пользователь закачивал файл с таким именем.'
;


CREATE TABLE file_m2m_user_group
(
	fmug_f_uid BIGINT UNSIGNED NOT NULL COMMENT 'Идентификатор файла.',
	fmug_ug_uid BIGINT UNSIGNED NOT NULL COMMENT 'Идентификатор группы.',
	fmug_rights BIGINT UNSIGNED NULL COMMENT 'Права группы относительно файла.',
	PRIMARY KEY (fmug_f_uid, fmug_ug_uid),
	KEY (fmug_rights),
	KEY (fmug_f_uid),
	KEY (fmug_ug_uid)
) DEFAULT CHARACTER SET utf8 DEFAULT CHARSET utf8 COLLATE utf8_general_ci ENGINE=InnoDB COMMENT='Связь М-М между файлами и группами пользователей. Права группы пользователей относительно файла: скачать, удалить, обновить.'
;


CREATE TABLE ip_blacklist
(
	ib_ipv4 CHAR(15) NOT NULL COMMENT 'IPv4',
	ib_ipv6 CHAR(39) NOT NULL COMMENT 'IPv6',
	ib_dt INTEGER NOT NULL COMMENT 'Бан действителен до ... (unixtime).',
	ib_reason BIGINT UNSIGNED NULL COMMENT 'За что забанен (ссылка на таблицу причин банов).',
	PRIMARY KEY (ib_ipv4, ib_ipv6),
	KEY (ib_reason)
) DEFAULT CHARACTER SET utf8 DEFAULT CHARSET utf8 COLLATE utf8_general_ci ENGINE=InnoDB COMMENT='Чёрный список ip-адресов (для бана зарегистрированных пользователей использовать таблицу пользователей).'
;


CREATE TABLE log
(
	l_uid BIGINT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Идентификатор записи лога.',
	l_u_uid BIGINT UNSIGNED NULL COMMENT 'Идентификатор пользователя (NULL, если это системное действие).',
	l_urr_uid INTEGER UNSIGNED NOT NULL COMMENT 'Идентификатор действия (берётся из таблицы прав ролей; каждое право описывает своё одно действие, например "загрузить файл", "удалить файл", "забанить пользователя" и т.п.).',
	l_f_uid BIGINT UNSIGNED NULL COMMENT 'Идентификатор файла (NULL, если операция не связана с файлами).',
	l_dt INTEGER NOT NULL COMMENT 'Дата-время (unixtime) выполнения действия.',
	l_parameters TEXT NULL COMMENT 'Параметры действия(сериализованный массив).',
	PRIMARY KEY (l_uid),
	KEY (l_f_uid),
	KEY (l_u_uid),
	KEY (l_urr_uid)
) DEFAULT CHARACTER SET utf8 DEFAULT CHARSET utf8 COLLATE utf8_general_ci ENGINE=InnoDB COMMENT='Лог (хранит действия за последний месяц, потом они переносятся в архив лога).'
;


CREATE TABLE log_archive
(
	la_uid BINARY(240) NOT NULL COMMENT 'Идентификатор записи лога (шесть sha1 хэшей: от исходного PK, времени и 4-х случайных чисел).',
	la_u_uid BIGINT UNSIGNED NULL COMMENT 'Идентификатор пользователя (NULL, если это системное действие).',
	la_urr_uid INTEGER UNSIGNED NOT NULL COMMENT 'Идентификатор действия (берётся из таблицы прав ролей; каждое право описывает своё одно действие, например "загрузить файл", "удалить файл", "забанить пользователя" и т.п.).',
	la_f_uid BIGINT UNSIGNED NULL COMMENT 'Идентификатор файла (NULL, если операция не связана с файлами).',
	la_dt INTEGER NOT NULL COMMENT 'Дата-время (unixtime) выполнения действия.',
	la_parameters TEXT NULL COMMENT 'Параметры действия(сериализованный массив).',
	PRIMARY KEY (la_uid),
	KEY (la_f_uid),
	KEY (la_u_uid),
	KEY (la_urr_uid)
) DEFAULT CHARACTER SET utf8 DEFAULT CHARSET utf8 COLLATE utf8_general_ci ENGINE=InnoDB COMMENT='Архив лога.'
;


CREATE TABLE page
(
	p_uid INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Идентификатор страницы.',
	p_parent INTEGER UNSIGNED NULL COMMENT 'Ссылка на родительскую страницу (rFK).',
	p_name VARCHAR(255) NOT NULL COMMENT 'Название страницы (отображается на странице и в админке).',
	p_menu_name VARCHAR(255) NOT NULL COMMENT 'Имя страницы для отображения в меню и карте сайта (обычно, оно лаконичнее, чем имя страницы для отображения на самой странице).',
	p_hdr_title TEXT NOT NULL COMMENT 'TITLE',
	p_hdr_keywords TEXT NOT NULL COMMENT 'KEYWORDS',
	p_hdr_description TEXT NOT NULL COMMENT 'DESCRIPTION',
	p_text TEXT NULL COMMENT 'Текстовое наполнение страницы (если есть).',
	p_template VARCHAR(255) NOT NULL COMMENT 'Имя файла главного шаблона страницы.',
	p_handler VARCHAR(255) NULL COMMENT 'Имя файла основного обработчика страницы.',
	PRIMARY KEY (p_uid),
	KEY (p_parent)
) DEFAULT CHARACTER SET utf8 DEFAULT CHARSET utf8 COLLATE utf8_general_ci ENGINE=InnoDB COMMENT='Страницы сайта.'
;


CREATE TABLE resource_info
(
	ri_uid INTEGER UNSIGNED NOT NULL COMMENT 'Идентификатор записи. В этой таблице всегда будет только одна запись, но идентификатор всё равно должен быть для единообразия работы с записями таблиц.',
	ri_registered_users BIGINT UNSIGNED NULL COMMENT 'Сколько пользователей зарегистрировано на ресурсе.',
	ri_registered_users_today BIGINT UNSIGNED NULL COMMENT 'Сколько пользователей зарегистрировано на ресурсе сегодня.',
	ri_uploaded_files BIGINT UNSIGNED NULL COMMENT 'Сколько всего загружено файлов.',
	ri_uploaded_files_today BIGINT UNSIGNED NULL COMMENT 'Сколько файлов загружено сегодня.',
	ri_uploaded_files_size BIGINT UNSIGNED NULL COMMENT 'Общий размер загруженных файлов.',
	ri_uploaded_files_size_today BIGINT UNSIGNED NULL COMMENT 'Общий размер загруженных сегодня файлов.',
	ri_downloaded_files BIGINT UNSIGNED NULL COMMENT 'Сколько всего скачано файлов.',
	ri_downloaded_files_today BIGINT UNSIGNED NULL COMMENT 'Сколько файлов скачано сегодня.',
	ri_downloaded_files_size BIGINT UNSIGNED NULL COMMENT 'Объём скачанного за всё время (Mb).',
	ri_downloaded_files_size_today BIGINT UNSIGNED NULL COMMENT 'Объём скачанного за сегодня (Mb).',
	ri_update_dt INTEGER NULL,
	PRIMARY KEY (ri_uid)
) DEFAULT CHARACTER SET utf8 DEFAULT CHARSET utf8 COLLATE utf8_general_ci ENGINE=InnoDB COMMENT='Информация о ресурсе (все поля кэшируются).'
;


CREATE TABLE user
(
	u_uid BIGINT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Идентификатор пользователя.',
	u_login VARCHAR(180) NOT NULL COMMENT 'Логин пользователя. Уникальный!',
	u_password CHAR(40) NOT NULL COMMENT 'Пароль пользователя (sha1-хеш).',
	u_email BINARY(255) NOT NULL COMMENT 'E-mail пользователя.',
	u_name VARCHAR(255) NOT NULL COMMENT 'Имя пользователя для отображения на страницах ресурса.',
	u_reg_date INTEGER NOT NULL COMMENT 'Дата-время регистрации пользователя (unixtime).',
	u_birth_date INTEGER NOT NULL COMMENT 'Дата рождения пользователя (с точностью до дня, unixtime). Поле обязательно к заполнению, т.к. на его основе производится определение прав доступа к материалам с разными возрастными ограничениями.',
	u_uploaded_files BIGINT UNSIGNED NULL COMMENT 'Сколько закачал файлов (кэшируется из закачек).',
	u_downloaded_files BIGINT UNSIGNED NULL COMMENT 'Сколько скачал файлов (кэшируется из скачанного).',
	u_comments BIGINT UNSIGNED NULL COMMENT 'Сколько оставил комментариев (кэшируется из комментариев).',
	u_bonus_speed BIGINT UNSIGNED NULL COMMENT 'Бонус по скорости (Kb/sec).',
	u_bonus_upload BIGINT UNSIGNED NULL COMMENT 'Бонус по количеству закачиваемого (количество файлов).',
	u_bonus_download BIGINT UNSIGNED NULL COMMENT 'Бонус по количеству скачиваемого (количество файлов).',
	u_ban BIGINT UNSIGNED NULL COMMENT 'Бан (ссылка на причину бана; NULL - если не забанен).',
	u_ban_dt INTEGER NULL COMMENT 'До какой даты забанен (NULL - если не забанен).',
	PRIMARY KEY (u_uid),
	UNIQUE UQ_user_u_email(u_email),
	UNIQUE UQ_user_u_login(u_login),
	KEY (u_ban)
) DEFAULT CHARACTER SET utf8 DEFAULT CHARSET utf8 COLLATE utf8_general_ci ENGINE=InnoDB COMMENT='Зарегистрированные пользователи файлообменного сервиса.'
;


CREATE TABLE user_group
(
	ug_uid BIGINT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Идентификатор группы.',
	ug_name VARCHAR(255) NOT NULL COMMENT 'Название группы.',
	ug_description TEXT NULL COMMENT 'Описание группы.',
	PRIMARY KEY (ug_uid)
) DEFAULT CHARACTER SET utf8 DEFAULT CHARSET utf8 COLLATE utf8_general_ci ENGINE=InnoDB COMMENT='Группы пользователей (для создания "групп друзей", групп доступа к каким-то файлам и т.д.) Владелец группы отмечается в user_group_m2m_user.'
;


CREATE TABLE user_group_m2m_user
(
	ugmu_ug_uid BIGINT UNSIGNED NOT NULL COMMENT 'Идентификатор группы.',
	ugmu_u_uid BIGINT UNSIGNED NOT NULL COMMENT 'Идентификатор пользователя.',
	ugmu_is_owner BIT NOT NULL DEFAULT 0 COMMENT 'Является ли пользователь владельцем группы.',
	PRIMARY KEY (ugmu_ug_uid, ugmu_u_uid),
	KEY (ugmu_u_uid),
	KEY (ugmu_ug_uid)
) DEFAULT CHARACTER SET utf8 DEFAULT CHARSET utf8 COLLATE utf8_general_ci ENGINE=InnoDB COMMENT='Связь групп пользователей и пользователей.'
;


CREATE TABLE user_role
(
	ur_uid INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Идентификатор роли.',
	ur_name VARCHAR(180) NULL COMMENT 'Название роли (уникально, чтобы не было дублирования и путаницы).',
	ur_upload_volume_limit BIGINT UNSIGNED NULL COMMENT 'Ограничение по объёму размещённых файлов (в сутки: 0:00:00-23:59:59).',
	ur_download_volume_limit BIGINT UNSIGNED NULL COMMENT 'Ограничения по объёму скачиваемых файлов (в сутки: 0:00:00-23:59:59).',
	ur_upload_count_limit BIGINT UNSIGNED NULL COMMENT 'Ограничение по количеству размещённых файлов (в сутки: 0:00:00-23:59:59).',
	ur_download_count_limit BIGINT UNSIGNED NULL COMMENT 'Ограничение по количеству скачиваемых файлов (в сутки: 0:00:00-23:59:59).',
	ur_download_speed_limit BIGINT UNSIGNED NULL COMMENT 'Ограничение по скорости скачивания (скорость загрузки файлов к нам на сервер не ограничена). Kb/sec.',
	PRIMARY KEY (ur_uid),
	UNIQUE UQ_user_role_ur_name(ur_name)
) DEFAULT CHARACTER SET utf8 DEFAULT CHARSET utf8 COLLATE utf8_general_ci ENGINE=InnoDB COMMENT='Роли пользователей (пользователь может находиться в нескольких ролях одновременно, например: администратор, привилигированный пользователь и т.п.)'
;


CREATE TABLE user_role_m2m_user
(
	ur_uid INTEGER UNSIGNED NOT NULL COMMENT 'Идентификатор роли.',
	u_uid BIGINT UNSIGNED NULL COMMENT 'Идентификатор пользователя.',
	PRIMARY KEY (ur_uid),
	KEY (u_uid)
) DEFAULT CHARACTER SET utf8 DEFAULT CHARSET utf8 COLLATE utf8_general_ci ENGINE=InnoDB COMMENT='Связь М-М между ролями пользователей и пользователями.'
;


CREATE TABLE user_role_m2m_user_role_right
(
	urmurr_ur_uid INTEGER UNSIGNED NOT NULL COMMENT 'Идентификатор роли.',
	urmurr_urr_uid INTEGER UNSIGNED NULL COMMENT 'Идентификатор права роли.',
	PRIMARY KEY (urmurr_ur_uid),
	KEY (urmurr_urr_uid)
) DEFAULT CHARACTER SET utf8 DEFAULT CHARSET utf8 COLLATE utf8_general_ci ENGINE=InnoDB COMMENT='Связь М-М между таблицами ролей пользователей и прав ролей пользователей.'
;


CREATE TABLE user_role_right
(
	urr_uid INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Идентификатор права роли.',
	urr_name VARCHAR(180) NULL COMMENT 'Название права роли (уникально, чтобы не было дублирования и путаницы).',
	urr_description TEXT NULL COMMENT 'Описание права роли.',
	PRIMARY KEY (urr_uid),
	UNIQUE UQ_user_role_right_urr_name(urr_name)
) DEFAULT CHARACTER SET utf8 DEFAULT CHARSET utf8 COLLATE utf8_general_ci ENGINE=InnoDB COMMENT='Права ролей (правами обладают только роли, напрямую пользователям права давать нельзя).'
;





--  Create Foreign Key Constraints 
ALTER TABLE access_right ADD CONSTRAINT FK_access_right_user 
	FOREIGN KEY (ar_u_uid) REFERENCES user (u_uid)
;

ALTER TABLE comment ADD CONSTRAINT FK_comment_file 
	FOREIGN KEY (c_f_uid) REFERENCES file (f_uid)
;

ALTER TABLE comment ADD CONSTRAINT FK_comment_user 
	FOREIGN KEY (c_u_uid) REFERENCES user (u_uid)
;

ALTER TABLE download_intensity ADD CONSTRAINT FK_download_intensity_download_link 
	FOREIGN KEY (di_dl_uid) REFERENCES download_link (dl_uid)
;

ALTER TABLE download_link ADD CONSTRAINT FK_download_link_file 
	FOREIGN KEY (dl_f_uid) REFERENCES file (f_uid)
;

ALTER TABLE file ADD CONSTRAINT FK_file_access_right 
	FOREIGN KEY (f_ar_uid) REFERENCES access_right (ar_uid)
;

ALTER TABLE file ADD CONSTRAINT FK_file_file_category 
	FOREIGN KEY (f_fc_uid) REFERENCES file_category (fc_uid)
;

ALTER TABLE file ADD CONSTRAINT FK_file_age_limit 
	FOREIGN KEY (f_al_uid) REFERENCES age_limit (al_id)
;

ALTER TABLE file_category ADD CONSTRAINT FK_file_category_age_limit 
	FOREIGN KEY (fc_age_limit) REFERENCES age_limit (al_id)
;

ALTER TABLE file_m2m_user ADD CONSTRAINT FK_file_m2o_user_file 
	FOREIGN KEY (fmu_f_uid) REFERENCES file (f_uid)
;

ALTER TABLE file_m2m_user ADD CONSTRAINT FK_file_m2o_user_user 
	FOREIGN KEY (fmu_u_uid) REFERENCES user (u_uid)
;

ALTER TABLE file_m2m_user_group ADD CONSTRAINT FK_file_m2m_user_group_access_right 
	FOREIGN KEY (fmug_rights) REFERENCES access_right (ar_uid)
;

ALTER TABLE file_m2m_user_group ADD CONSTRAINT FK_file_m2m_user_group_file 
	FOREIGN KEY (fmug_f_uid) REFERENCES file (f_uid)
;

ALTER TABLE file_m2m_user_group ADD CONSTRAINT FK_file_m2m_user_group_user_group 
	FOREIGN KEY (fmug_ug_uid) REFERENCES user_group (ug_uid)
;

ALTER TABLE ip_blacklist ADD CONSTRAINT FK_ip_blacklist_ban_reason 
	FOREIGN KEY (ib_reason) REFERENCES ban_reason (br_uid)
;

ALTER TABLE log ADD CONSTRAINT FK_log_file 
	FOREIGN KEY (l_f_uid) REFERENCES file (f_uid)
;

ALTER TABLE log ADD CONSTRAINT FK_log_user 
	FOREIGN KEY (l_u_uid) REFERENCES user (u_uid)
;

ALTER TABLE log ADD CONSTRAINT FK_log_user_role_right 
	FOREIGN KEY (l_urr_uid) REFERENCES user_role_right (urr_uid)
;

ALTER TABLE log_archive ADD CONSTRAINT FK_log_archive_file 
	FOREIGN KEY (la_f_uid) REFERENCES file (f_uid)
;

ALTER TABLE log_archive ADD CONSTRAINT FK_log_archive_user 
	FOREIGN KEY (la_u_uid) REFERENCES user (u_uid)
;

ALTER TABLE log_archive ADD CONSTRAINT FK_log_archive_user_role_right 
	FOREIGN KEY (la_urr_uid) REFERENCES user_role_right (urr_uid)
;

ALTER TABLE page ADD CONSTRAINT FK_page_page 
	FOREIGN KEY (p_parent) REFERENCES page (p_uid)
;

ALTER TABLE user ADD CONSTRAINT FK_user_ban_reason 
	FOREIGN KEY (u_ban) REFERENCES ban_reason (br_uid)
;

ALTER TABLE user_group_m2m_user ADD CONSTRAINT FK_user_group_m2m_user_user 
	FOREIGN KEY (ugmu_u_uid) REFERENCES user (u_uid)
;

ALTER TABLE user_group_m2m_user ADD CONSTRAINT FK_user_group_m2m_user_user_group 
	FOREIGN KEY (ugmu_ug_uid) REFERENCES user_group (ug_uid)
;

ALTER TABLE user_role_m2m_user ADD CONSTRAINT FK_user_role_m2m_user_user 
	FOREIGN KEY (u_uid) REFERENCES user (u_uid)
;

ALTER TABLE user_role_m2m_user ADD CONSTRAINT FK_user_role_m2m_user_user_role 
	FOREIGN KEY (ur_uid) REFERENCES user_role (ur_uid)
;

ALTER TABLE user_role_m2m_user_role_right ADD CONSTRAINT FK_user_role_m2m_user_role_right_user_role 
	FOREIGN KEY (urmurr_ur_uid) REFERENCES user_role (ur_uid)
;

ALTER TABLE user_role_m2m_user_role_right ADD CONSTRAINT FK_user_role_m2m_user_role_right_user_role_right 
	FOREIGN KEY (urmurr_urr_uid) REFERENCES user_role_right (urr_uid)
;






--  Create Triggers 
-- Не позволяет добавить 2+ одноимённых права одному пользователю. Не позволяет пользователю добавить право, имя которого совпадает с предустановленными правами.
DROP TRIGGER IF EXISTS `unique_access_right_bi`;

delimiter //

CREATE TRIGGER `unique_access_right_bi` BEFORE INSERT ON `access_right`
FOR EACH ROW
BEGIN
 DECLARE duplicates integer;

  SELECT count(*) INTO duplicates from `access_right` where `ar_name`=NEW.`ar_name` AND (ISNULL(`ar_u_uid`) OR `ar_u_uid`=NEW.`ar_u_uid`);

IF duplicates > 0 THEN
      SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Access right name must be unique for one user and must not be similar to predefined name', MYSQL_ERRNO = 1001;
    END IF;
 
END
//

delimiter ;

;
-- Не позволяет добавить 2+ одноимённых права одному пользователю. Не позволяет пользователю добавить право, имя которого совпадает с предустановленными правами.
DROP TRIGGER IF EXISTS `unique_access_right_bu`;

delimiter //

CREATE TRIGGER `unique_access_right_bu` BEFORE UPDATE ON `access_right`
FOR EACH ROW
BEGIN
 DECLARE duplicates integer;

  SELECT count(*) INTO duplicates from `access_right` where `ar_name`=NEW.`ar_name` AND (ISNULL(`ar_u_uid`) OR `ar_u_uid`=NEW.`ar_u_uid`);

IF duplicates > 0 THEN
      SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Access right name must be unique for one user and must not be similar to predefined name', MYSQL_ERRNO = 1001;
    END IF;
 
END
//

delimiter ;

;
DROP TRIGGER IF EXISTS `unique_hashes_bi`;

delimiter //

CREATE TRIGGER `unique_hashes_bi` BEFORE INSERT ON `file`
FOR EACH ROW
BEGIN
    IF NEW.`f_name` = NEW.`f_del_link_hash` THEN
      SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Hashes for file name and deletion link can not be equal', MYSQL_ERRNO = 1001;
    END IF;
END
//

delimiter ;

;
DROP TRIGGER IF EXISTS `unique_hashes_bu`;

delimiter //


CREATE TRIGGER `unique_hashes_bu` BEFORE UPDATE ON `file`
FOR EACH ROW
BEGIN
    IF NEW.`f_name` = NEW.`f_del_link_hash` THEN
      SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Hashes for file name and deletion link can not be equal', MYSQL_ERRNO = 1001;
    END IF;
END
//

delimiter ;

;
-- Блокирует регистрацию пользователей с датой рождения &lt;= дате регистрации.
DROP TRIGGER IF EXISTS `reg_date_gt_birth_date_bi`;

delimiter //

CREATE TRIGGER `reg_date_gt_birth_date_bi` BEFORE INSERT ON `user`
FOR EACH ROW
BEGIN
    IF NEW.`u_reg_date` <= NEW.`u_birth_date` THEN
      SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Registration date can not be less or equal to birth date', MYSQL_ERRNO = 1001;
    END IF;
END
//

delimiter ;

;
-- Блокирует обновление, которое привело бы к тому, что дата рождения стала &lt;= дате регистрации.
DROP TRIGGER IF EXISTS `reg_date_gt_birth_date_bu`;

delimiter //

CREATE TRIGGER `reg_date_gt_birth_date_bu` BEFORE UPDATE ON `user`
FOR EACH ROW
BEGIN
    IF NEW.`u_reg_date` <= NEW.`u_birth_date` THEN
      SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Registration date can not be less or equal to birth date', MYSQL_ERRNO = 1001;
    END IF;
END
//

delimiter ;

;
